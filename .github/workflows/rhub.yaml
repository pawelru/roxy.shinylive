# This workflow is based on R-hub's generic GitHub Actions workflow file.
# Its canonical location is at
# https://github.com/r-hub/actions/blob/main/workflows/rhub.yaml

name: R-hub 🌐

on:
  push:
    branches:
      - test
  workflow_dispatch:
  workflow_call:
    secrets:
      REPO_GITHUB_TOKEN:
        description: |
          Github token with read access to repositories
        required: false

concurrency:
  group: r-hub-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      containers: ${{ steps.rhub-setup.outputs.containers }}
      platforms: ${{ steps.rhub-setup.outputs.platforms }}

    steps:
      - uses: r-hub/actions/setup@v1
        with:
          config: >-
            r-devel-windows-x86_64,
            r-release-linux-x86_64,
            r-release-windows-x86_64,
            r-oldrel-windows-x86_64
        id: rhub-setup

  linux-containers:
    needs: setup
    if: ${{ needs.setup.outputs.containers != '[]' }}
    runs-on: ubuntu-latest
    name: ${{ matrix.config.label }}
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.setup.outputs.containers) }}
    container:
      image: ${{ matrix.config.container }}

    steps:
      - name: Setup token 🔑
        id: github-token
        run: |
          if [ "${{ secrets.REPO_GITHUB_TOKEN }}" == "" ]; then
            echo "REPO_GITHUB_TOKEN is empty. Substituting it with GITHUB_TOKEN."
            echo "token=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          else
            echo "Using REPO_GITHUB_TOKEN."
            echo "token=${{ secrets.REPO_GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - uses: r-hub/actions/checkout@v1

      - uses: r-hub/actions/platform-info@v1
        with:
          job-config: ${{ matrix.config.job-config }}

      - uses: insightsengineering/setup-r-dependencies@v1
        with:
          skip-install: true
          github-token: ${{ steps.github-token.outputs.token }}
          restore-description: false

      - uses: r-hub/actions/setup-deps@v1
        with:
          job-config: ${{ matrix.config.job-config }}
          needs: DepsDev,DepsBranch
        env:
          GITHUB_PAT: ${{ steps.github-token.outputs.token }}

      - uses: r-hub/actions/run-check@v1
        with:
          job-config: ${{ matrix.config.job-config }}

  other-platforms:
    needs: setup
    if: ${{ needs.setup.outputs.platforms != '[]' }}
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.label }}
    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.setup.outputs.platforms) }}

    steps:
      - name: Setup token 🔑
        id: github-token
        run: |
          if [ "${{ secrets.REPO_GITHUB_TOKEN }}" == "" ]; then
            echo "REPO_GITHUB_TOKEN is empty. Substituting it with GITHUB_TOKEN."
            echo "token=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          else
            echo "Using REPO_GITHUB_TOKEN."
            echo "token=${{ secrets.REPO_GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - uses: r-hub/actions/checkout@v1

      - uses: r-hub/actions/setup-r@v1
        with:
          job-config: ${{ matrix.config.job-config }}

      - uses: r-hub/actions/platform-info@v1
        with:
          job-config: ${{ matrix.config.job-config }}

      - uses: insightsengineering/setup-r-dependencies@v1
        with:
          skip-install: true
          github-token: ${{ steps.github-token.outputs.token }}
          restore-description: false

      - uses: r-hub/actions/setup-deps@v1
        with:
          job-config: ${{ matrix.config.job-config }}
          needs: DepsDev,DepsBranch
        env:
          GITHUB_PAT: ${{ steps.github-token.outputs.token }}

      - name: test
        run: |
          assignInNamespace(
              x = "convert_to_utf16le",
              value = function(string) {
                  string <- enc2utf8(string)
                  string_utf16 <- iconv(string, from = "UTF-8", to = "UTF-16LE", toRaw = TRUE)[[1]]
                  bom_le <- charToRaw("\xFF\xFE")
                  if (!identical(string_utf16[1:2], bom_le)) {
                      string_utf16 <<- c(bom_le, string_utf16)
                  }
                  string_utf16
              },
              ns = "lzstring"
          )
          print(charToRaw("\xFF\xFE"))
          print(lzstring:::convert_to_utf16le("test"))
          print(lzstring:::compressToEncodedURIComponent_(lzstring:::convert_to_utf16le("test")))
          print(lzstring::compressToEncodedURIComponent("test"))
        shell: Rscript {0}

      - uses: r-hub/actions/run-check@v1
        with:
          job-config: ${{ matrix.config.job-config }}